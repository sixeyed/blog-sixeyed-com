---
title: 'Docker Retrospective: May 2017'
date: '2017-06-01 14:18:28'
tags:
- windows
- docker
- retrospective
---

Plenty happening in the Docker and Microsoft space. Last month I got to some great conferences and spent a bunch of time with some awesome folks.

[Docker CE 17.05](https://github.com/moby/moby/releases/tag/v17.05.0-ce) was released which added some useful features for Windows, and I shared a [.NET Framework sample app](https://github.com/dockersamples/newsletter-signup) which runs across multiple Windows Docker containers and makes use of the new features.

## Microsoft Build

Build was in Seattle this year, and Docker, Inc. were in the expo area with a booth that was packed for the whole event. Even before the conference started, we jointly ran a "ContainerFest" pre-day with Microsoft, dedicating the whole day to Docker and containers.

In the pre-day I demonstrated [Image2Docker](https://github.com/docker/communitytools-image2docker-win), using it to pull an [Umbraco](https://our.umbraco.org/) website from a VM into a Docker image, and then running Umbraco in a Docker container. The Dockerfile generated by Image2Docker was the basis for my [Umbraco Docker image](https://github.com/sixeyed/dockerfiles-windows/tree/master/umbraco).

During the show we had over 300 conversations at the Docker booth, mainly from folks who wanted to understand the basics of containers, and how Docker works on Windows. The Docker story is easy to tell, so we quickly moved on to discussing where Docker would fit in their organization, and the problems it would solve.

![Brandon from Docker at Microsoft Build](/content/images/2017/06/build.jpg)

Meanwhile there were lots of Docker mentions in the keynotes and the breakout sessions:

- cross-container debugging in Visual Studio
- the Azure Cloud Shell (powered by Docker containers)
- exporting Azure Functions as Docker Images with IoT Edge
- Docker Compose support for Service Fabric

## Developer Day - South West

The weekend before Build, I was speaking at [Developer Day South West](http://www.dddsouthwest.com/) in the UK. My session was on modernizing .NET Framework apps with Docker.

<iframe src="//www.slideshare.net/slideshow/embed_code/key/IzUC4wapADcEYy" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> 
  **[#dddsw - Modernizing .NET Apps with Docker](//www.slideshare.net/sixeyed/dddsw-modernizing-net-apps-with-docker "#dddsw - Modernizing .NET Apps with Docker")** from **[Elton Stoneman](https://www.slideshare.net/sixeyed)** 

Developer Day is a free conference which always has a great turn-out, and is very well run. I demonstrated moving an ASP.NET app into Docker, and then breaking features out into separate containers. Lots of great questions afterwards, and it was good to return to Bristol (where I worked many years ago).

The demo code is on my presentations repo on GitHub: [dddsw7](https://github.com/sixeyed/presentations/tree/master/developer-developer-developer/dddsw7). And [the next Developer Day](https://www.developerdeveloperdeveloper.com/) is on the 10th of June.

## SDD Conference

[Software Design and Development](http://sddconf.com/) is a professional conference held annually in London. The great thing for a presenter is that the sessions are 90 minutes, so you get to show a lot more stuff than the standard 60 minute sessions.

My talk was on .NET modernization with Docker, and I used the extra time to demonstrate the path to production - running the app in Docker Swarm and then on Docker EE Advanced:

<iframe src="//www.slideshare.net/slideshow/embed_code/key/1PnQsz4Xg3WQVI" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> 
  **[#SDD2017 - Modernizing .NET Apps with Docker](//www.slideshare.net/sixeyed/sdd2017-modernizing-net-apps-with-docker "#SDD2017 - Modernizing .NET Apps with Docker")** from **[Elton Stoneman](https://www.slideshare.net/sixeyed)** 

Source code as usual in my presentations repo: [sdd-2017](https://github.com/sixeyed/presentations/tree/master/sdd/sdd-2017).

## Red Shirt Dev Tour

This was very exciting. [Scott Guthrie](https://weblogs.asp.net/scottgu) toured Europe presenting full-day sessions covering pretty much everything in Azure. We joined Scott in [London](https://www.meetup.com/Docker-London/events/240025156/) and [Dublin](https://www.meetup.com/Docker-Dublin/events/239800951/), following on from his event with a Docker MeetUp.

I did a session covering Docker on Windows, ranging from the 101 to running apps in hybrid swarms. Taking Scott's cue to "show not tell", this was 90 minutes of demos, with just a couple of slides to frame the sections.

<iframe src="//www.slideshare.net/slideshow/embed_code/key/azFcu6D8a9NNQ4" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> 
  **[Docker on Windows and Linux - Red Shirt Dev Tour](//www.slideshare.net/sixeyed/docker-on-windows-and-linux-red-shirt-dev-tour "Docker on Windows and Linux - Red Shirt Dev Tour")** from **[Elton Stoneman](https://www.slideshare.net/sixeyed)** 

In the final demo I take a distributed app running in Windows containers, and gradually move the cross-platform workloads to Linux containers running in the same swarm. There's no loss of availability for the app, and it's a really cool demo to show.

Source code in the presentations repo: [red-shirt-tour](https://github.com/sixeyed/presentations/tree/master/red-shirt-tour).

## SignUp - A .NET Framework Sample App

I've been using variations on the same sample app in demos and workshops for a while, and this month I tidied it up and added it to the Docker Samples org on GitHub: [dockersamples/newsletter-signup](https://github.com/dockersamples/newsletter-signup/):

![SignUp Homepage - an ASP.NET WebForms app running in Docker](/content/images/2017/06/signup-homepage.png)

It's a distrbuted app which uses ASP.NET WebForms as the "traditional" part, and then plugs in message queuing with [NATS](http://nats.io/), and self-service analytics with [Elasticsearch](https://www.elastic.co/products/elasticsearch) and [Kibana](https://www.elastic.co/products/kibana) - all running in Docker containers on Windows.

[All](https://github.com/dockersamples/newsletter-signup/blob/master/docker/index-handler/Dockerfile) [the](https://github.com/dockersamples/newsletter-signup/blob/master/docker/save-handler/Dockerfile) [Dockerfiles](https://github.com/dockersamples/newsletter-signup/blob/master/docker/web/Dockerfile) use [multi-stage builds](https://docs.docker.com/engine/userguide/eng-image/multistage-build/). Each .NET app is compiled inside a Docker container, using an image with MSBuild and BuGet installed, and then the compiled app is packaged into the final image.

> You can build and run the sample solution with Docker on Windows, with no other dependencies. <mark>You don't need Visual Studio, MSBuild or even .NET</mark>. All you need is the source code and Docker.

I'll be iterating on this sample app to take advantage of new features. [Docker secrets](https://docs.docker.com/engine/swarm/secrets/) are [coming to Windows in 17.06](https://github.com/moby/moby/pull/29738), so there will be an update to use secrets for sensitive data.

## Jenkins and Bonobo - in Windows Docker images

I'm gradually finding time to finish up my book - [Docker on Windows](https://www.amazon.com/Docker-Windows-Elton-Stoneman-ebook/dp/B0711Y4J9K/ref=sr_1_6?ie=UTF8&qid=1496324452&sr=8-6&keywords=docker+windows) (<mark>which you can pre-order now!</mark>). Chapter 10 is about CI/CD with Docker and I wanted to demonstrate a workflow where every component runs in Docker.

To support that, I've put together Docker images for [Bonobo](https://github.com/sixeyed/dockerfiles-windows/tree/master/bonobo) - a Git server, and [Jenkins](https://github.com/sixeyed/dockerfiles-windows/tree/master/jenkins) - the automation server. You can run those services as Docker containers, along with a local Docker registry, and power your whole deployment workflow with Docker.

Jenkins is an interesting case, because most of the functionality comes from plug-ins you add after installation. Some plugins can install their dependencies, but not all of them. My Jenkins instance needs to have the Git and Docker command lines available, so I've created a [Jenkins sample image](https://github.com/sixeyed/dockerfiles-windows/tree/master/jenkins-sample) which bundles the dependencies.

The [Dockerfile for jenkins-sample](https://github.com/sixeyed/dockerfiles-windows/blob/master/jenkins-sample/windowsservercore/Dockerfile) makes full use of multi-stage builds. This is how it starts:

    FROM sixeyed/git:2.13.0 AS git
    FROM sixeyed/docker-ce:17.05.0-ce AS docker
    FROM sixeyed/jenkins:2.46.2

:)

## Up Next

A couple of great conferences coming up in June, where I'll be doing my stuff:

### [DevSum 17](http://www.devsum.se/)

The best .NET conference in Sweden!

- 

I'm running a full-day workshop (_which still has some places left!_) [Windows Containers and Docker - Now is the Time](http://www.devsum.se/workshop-windows-containers-and-docker-now-is-the-time-elton-stoneman/) - covering everything from the Docker on Windows 101, modernizing .NET Fx apps, through swarm mode and CI/CD.

- 

I'm also presenting a session, [The Velvet Revolution: Dockerizing Legacy ASP.NET Apps](http://www.devsum.se/speaker/elton-stoneman/). (I do a lot of sessions on modernizing .NET apps, but they're never the same!).

### [NDC Oslo](http://ndcoslo.com/)

NDC in London was great, and I'm pleased to be at the next event on Norway.

- My session is [The Hybrid Docker Swarm: Mashing Windows and Linux Apps with Containers](http://ndcoslo.com/talk/the-hybrid-docker-swarm-mashing-windows-and-linux-apps-with-containers/)

If you see me around, be sure to say Hi.

<!--kg-card-end: markdown-->